# Generated by Django 5.2.5 on 2025-08-22 15:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('campaigns', '0002_campaign_organization'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Domain name (e.g., phishing-security.com)', max_length=255, unique=True)),
                ('domain_type', models.CharField(choices=[('primary', 'Primary Domain'), ('spoofing', 'Spoofing Domain'), ('tracking', 'Tracking Domain'), ('redirect', 'Redirect Domain')], default='spoofing', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('failed', 'Verification Failed'), ('active', 'Active'), ('inactive', 'Inactive')], default='pending', max_length=20)),
                ('mx_records', models.JSONField(default=list, help_text='MX records for email routing')),
                ('txt_records', models.JSONField(default=list, help_text='TXT records for verification')),
                ('spf_record', models.TextField(blank=True, help_text='SPF record for email authentication')),
                ('dkim_record', models.TextField(blank=True, help_text='DKIM record for email signing')),
                ('dmarc_record', models.TextField(blank=True, help_text='DMARC record for email policy')),
                ('ssl_enabled', models.BooleanField(default=False)),
                ('ssl_certificate', models.TextField(blank=True)),
                ('click_tracking_enabled', models.BooleanField(default=True)),
                ('open_tracking_enabled', models.BooleanField(default=True)),
                ('analytics_enabled', models.BooleanField(default=True)),
                ('emails_sent', models.IntegerField(default=0)),
                ('emails_opened', models.IntegerField(default=0)),
                ('links_clicked', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('max_emails_per_day', models.IntegerField(default=1000)),
                ('rate_limit_per_hour', models.IntegerField(default=100)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_domains', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_domains',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DomainVerificationToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64, unique=True)),
                ('verification_type', models.CharField(choices=[('dns', 'DNS Verification'), ('file', 'File Upload Verification'), ('email', 'Email Verification')], max_length=20)),
                ('is_used', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verification_tokens', to='campaigns.emaildomain')),
            ],
            options={
                'db_table': 'domain_verification_tokens',
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('subject', models.CharField(max_length=500)),
                ('html_content', models.TextField()),
                ('plain_content', models.TextField(blank=True)),
                ('sender_name', models.CharField(max_length=100)),
                ('sender_email', models.EmailField(max_length=254)),
                ('reply_to', models.EmailField(blank=True, max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.CharField(default='phishing', max_length=50)),
                ('difficulty_level', models.CharField(default='intermediate', max_length=20)),
                ('times_used', models.IntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='campaigns.emaildomain')),
            ],
            options={
                'db_table': 'email_templates',
            },
        ),
        migrations.CreateModel(
            name='DomainDNSRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('A', 'A Record'), ('AAAA', 'AAAA Record'), ('CNAME', 'CNAME Record'), ('MX', 'MX Record'), ('TXT', 'TXT Record'), ('SPF', 'SPF Record'), ('DKIM', 'DKIM Record'), ('DMARC', 'DMARC Record')], max_length=10)),
                ('name', models.CharField(help_text='Record name/subdomain', max_length=255)),
                ('value', models.TextField(help_text='Record value')),
                ('ttl', models.IntegerField(default=3600, help_text='Time to Live in seconds')),
                ('priority', models.IntegerField(blank=True, help_text='Priority for MX records', null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_attempts', models.IntegerField(default=0)),
                ('last_verification', models.DateTimeField(blank=True, null=True)),
                ('verification_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dns_records', to='campaigns.emaildomain')),
            ],
            options={
                'db_table': 'domain_dns_records',
                'unique_together': {('domain', 'record_type', 'name')},
            },
        ),
    ]
